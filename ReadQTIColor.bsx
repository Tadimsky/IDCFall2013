' {$STAMP BS2sx}
' {$PBASIC 2.5}

' Sensor Information
SnsrLeft CON 10
SnsrMiddle CON 9
SnsrRight CON 8

' Ping Sensor
Ping_Pin    CON   15

InConstant  CON   890
inDistance  VAR   Word
time        VAR   Word

' Servo Pins
ServoLeft CON 12
ServoRight CON 13

' Movement Constants
moveDistance CON 10
rotateDistance CON 20

' Thresholds
blackColor CON 500
readDistance CON 12

reps    VAR     Nib

leftDuration VAR Word
middleDuration VAR Word
rightDuration VAR Word

DO
  GOSUB ReadPing
  IF inDistance < readDistance THEN
    GOSUB Read_Sensor
    GOSUB Determine_Color
  ELSE
    GOSUB MoveForward
  ENDIF
LOOP

Read_Sensor:
  HIGH SnsrLeft
  PAUSE 1
  RCTIME SnsrLeft, 1, leftDuration

  HIGH SnsrMiddle
  PAUSE 1
  RCTIME SnsrMiddle, 1, middleDuration

  HIGH SnsrRight
  PAUSE 1
  RCTIME SnsrRight, 1, rightDuration

  DEBUG CLS, "Left Color", DEC leftDuration, CR
  DEBUG "Middle Color", DEC middleDuration, CR
  DEBUG "Right Color", DEC rightDuration, CR
RETURN

Determine_Color:
  IF (middleDuration > blackColor) THEN
    IF (leftDuration > blackColor) THEN
      IF (rightDuration > blackColor) THEN
        ' Left, Middle, Right are black
        ' Definitely on a square
        DEBUG "Left, Middle, Right are Black", CR
        GOSUB LeftRotate
        GOSUB LeftRotate
        GOSUB MoveForward
        GOSUB MoveForward
      ELSE
        ' Left, Middle are black
        ' Could be on a square
        DEBUG "Left, Middle are Black", CR
        GOSUB LeftRotate
        GOSUB LeftRotate
        GOSUB MoveForward
        GOSUB MoveForward
      ENDIF
    ELSE
      IF (rightDuration > blackColor) THEN
        ' Middle, Right are black
        ' Could be on a square
        DEBUG "Middle, Right are Black", CR
        GOSUB LeftRotate
        GOSUB LeftRotate
        GOSUB MoveForward
        GOSUB MoveForward
      ELSE
        ' Only middle is black
        ' Line Following?
        DEBUG "Middle is Black", CR
      ENDIF
    ENDIF
  ELSE
    ' Nothing Reads as Black
    ' On red or silver
    DEBUG "Nothing is Black", CR
    GOSUB RightRotate
    GOSUB RightRotate
    GOSUB MoveForward
    GOSUB MoveForward
  ENDIF
PAUSE 100
RETURN

' Movement Methods

MoveForward:
  reps = 1
  FOR reps = 1 TO moveDistance
    PULSOUT ServoRight, 2125
    PULSOUT ServoLeft, 1625
    PAUSE 20
  NEXT
RETURN

MoveBackward:
  reps = 1
  FOR reps = 1 TO moveDistance
    PULSOUT ServoRight, 1625
    PULSOUT ServoLeft, 2125
    PAUSE 20
  NEXT
RETURN

LeftRotate:
  reps = 1
  FOR reps = 1 TO 10
    PULSOUT ServoRight, 1625
    PULSOUT ServoLeft, 1625
    PAUSE 20
  NEXT
RETURN

RightRotate:
  reps = 1
  FOR reps = 1 TO 10
    PULSOUT ServoRight, 2125
    PULSOUT ServoLeft, 2125
    PAUSE 20
  NEXT
RETURN

RightPivot:
  reps = 1
  FOR reps = 1 TO rotateDistance
    PULSOUT ServoRight, 2125
    PULSOUT ServoLeft, 1875
  NEXT
RETURN

LeftPivot:
  reps = 1
  FOR reps = 1 TO rotateDistance
    PULSOUT ServoRight, 1875
    PULSOUT ServoLeft, 1625
  NEXT
RETURN

ReadPing:
  PULSOUT Ping_Pin, 5              ' Send short pulse to Ping
  PULSIN Ping_Pin, 1, time         ' Wait for echo
  inDistance = inConstant ** time  ' Convert to inches
  DEBUG CR, "Distance = ", DEC inDistance         ' Display result
  PAUSE 200         ' Short delay until next read
RETURN