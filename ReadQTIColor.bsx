' {$STAMP BS2sx}
' {$PBASIC 2.5}

' Sensor Information
SnsrLeft CON 10
SnsrMiddle CON 9
SnsrRight CON 8

' Servo Pins
ServoLeft CON 12
ServoRight CON 13

' Movement Constants
moveDistance CON 10
rotateDistance CON 20


reps    VAR     Nib

leftDuration VAR Word
middleDuration VAR Word
rightDuration VAR Word

READ_Sensor:
  HIGH SnsrLeft
  PAUSE 1
  RCTIME SnsrLeft, 1, leftDuration

  HIGH SnsrMiddle
  PAUSE 1
  RCTIME SnsrMiddle, 1, middleDuration

  HIGH SnsrRight
  PAUSE 1
  RCTIME SnsrRight, 1, rightDuration

  DEBUG CLS, "Left Color", DEC leftDuration, CR
  DEBUG "Middle Color", DEC middleDuration, CR
  DEBUG "Right Color", DEC rightDuration, CR

Determine_Color:
  IF middleDuration < 10 THEN
    'GOSUB LeftRotate
    'GOSUB ForwardMove
    'GOSUB ForwardMove
  ENDIF

  IF middleDuration > 100 THEN
    'GOSUB ForwardMove
  ENDIF

  IF middleDuration < 100 AND middleDuration > 10 THEN
    'GOSUB RightRotate
    'GOSUB ForwardMove
    'GOSUB ForwardMove
  ENDIF

PAUSE 100
GOTO READ_Sensor


' Movement Methods

ForwardMove:
  reps = 1
  FOR reps = 1 TO moveDistance
    PULSOUT ServoRight, 2125
    PULSOUT ServoLeft, 1625
  NEXT
RETURN

BackwardMove:
  reps = 1
  FOR reps = 1 TO moveDistance
    PULSOUT ServoRight, 1625
    PULSOUT ServoLeft, 2125
  NEXT
RETURN

LeftRotate:
  reps = 1
  FOR reps = 1 TO rotateDistance
    PULSOUT ServoRight, 1625
    PULSOUT ServoLeft, 1625
  NEXT
RETURN

RightRotate:
  reps = 1
  FOR reps = 1 TO rotateDistance
    PULSOUT ServoRight, 2125
    PULSOUT ServoLeft, 2125
  NEXT
RETURN

RightPivot:
  reps = 1
  FOR reps = 1 TO rotateDistance
    PULSOUT ServoRight, 2125
    PULSOUT ServoLeft, 1875
  NEXT
RETURN

LeftPivot:
  reps = 1
  FOR reps = 1 TO rotateDistance
    PULSOUT ServoRight, 1875
    PULSOUT ServoLeft, 1625
  NEXT
RETURN